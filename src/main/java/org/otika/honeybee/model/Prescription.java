package org.otika.honeybee.model;

// Generated May 22, 2013 4:41:58 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import javax.persistence.Version;

import org.hibernate.search.annotations.DateBridge;
import org.hibernate.search.annotations.Field;
import org.hibernate.search.annotations.IndexedEmbedded;
import org.hibernate.search.annotations.Resolution;

/**
 * Prescription generated by hbm2java
 */
@Entity
@Table(name = "prescription", catalog = "honeybee", uniqueConstraints = @UniqueConstraint(columnNames = "title"))
public class Prescription implements java.io.Serializable {

	private static final long serialVersionUID = 5331336059116754439L;
	private Long id;
	private Integer version;
	private Author author;
	private String title;
	private String titlear;
	private String titlefr;
	private String preparation;
	private String preparationfr;
	private String preparationar;
	private String treatment;
	private String treatmentfr;
	private String treatmentar;
	private boolean formale;
	private boolean forfemale;
	private boolean forchildren;
	private Short coefficient;
	private Date creationdate = new Date();
	private Set<Ingredient> ingredients = new HashSet<Ingredient>(0);
	private Set<Witness> witnesses = new HashSet<Witness>(0);
	private Set<Defect> defects = new HashSet<Defect>(0);
	private Set<Virtue> virtues = new HashSet<Virtue>(0);
	private Set<Complement> complements = new HashSet<Complement>(0);

	public Prescription() {
	}

	public Prescription(Author author, String title, String titlear,
			String titlefr, String preparation, String preparationfr,
			String preparationar, String treatment, String treatmentfr,
			String treatmentar, boolean formale, boolean forfemale,
			boolean forchildren) {
		this.author = author;
		this.title = title;
		this.titlear = titlear;
		this.titlefr = titlefr;
		this.preparation = preparation;
		this.preparationfr = preparationfr;
		this.preparationar = preparationar;
		this.treatment = treatment;
		this.treatmentfr = treatmentfr;
		this.treatmentar = treatmentar;
		this.formale = formale;
		this.forfemale = forfemale;
		this.forchildren = forchildren;
	}

	public Prescription(Author author, String title, String titlear,
			String titlefr, String preparation, String preparationfr,
			String preparationar, String treatment, String treatmentfr,
			String treatmentar, boolean formale, boolean forfemale,
			boolean forchildren, Short coefficient,
			Set<Ingredient> ingredients, Set<Witness> witnesses,
			Set<Defect> defects, Set<Virtue> virtues,
			Set<Complement> complements) {
		this.author = author;
		this.title = title;
		this.titlear = titlear;
		this.titlefr = titlefr;
		this.preparation = preparation;
		this.preparationfr = preparationfr;
		this.preparationar = preparationar;
		this.treatment = treatment;
		this.treatmentfr = treatmentfr;
		this.treatmentar = treatmentar;
		this.formale = formale;
		this.forfemale = forfemale;
		this.forchildren = forchildren;
		this.coefficient = coefficient;
		this.ingredients = ingredients;
		this.witnesses = witnesses;
		this.defects = defects;
		this.virtues = virtues;
		this.complements = complements;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Version
	@Column(name = "version")
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@IndexedEmbedded
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "author_id", nullable = false)
	public Author getAuthor() {
		return this.author;
	}

	public void setAuthor(Author author) {
		this.author = author;
	}

	@Field
	@Column(name = "title", unique = true, nullable = false, length = 145)
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Field
	@Column(name = "titlear", nullable = false, length = 145)
	public String getTitlear() {
		return this.titlear;
	}

	public void setTitlear(String titlear) {
		this.titlear = titlear;
	}

	@Field
	@Column(name = "titlefr", nullable = false, length = 145)
	public String getTitlefr() {
		return this.titlefr;
	}

	public void setTitlefr(String titlefr) {
		this.titlefr = titlefr;
	}

	@Field
	@Column(name = "preparation", nullable = false, length = 65535)
	public String getPreparation() {
		return this.preparation;
	}

	public void setPreparation(String preparation) {
		this.preparation = preparation;
	}

	@Field
	@Column(name = "preparationfr", nullable = false, length = 65535)
	public String getPreparationfr() {
		return this.preparationfr;
	}

	public void setPreparationfr(String preparationfr) {
		this.preparationfr = preparationfr;
	}

	@Field
	@Column(name = "preparationar", nullable = false, length = 65535)
	public String getPreparationar() {
		return this.preparationar;
	}

	public void setPreparationar(String preparationar) {
		this.preparationar = preparationar;
	}

	@Field
	@Column(name = "treatment", nullable = false, length = 65535)
	public String getTreatment() {
		return this.treatment;
	}

	public void setTreatment(String treatment) {
		this.treatment = treatment;
	}

	@Field
	@Column(name = "treatmentfr", nullable = false, length = 65535)
	public String getTreatmentfr() {
		return this.treatmentfr;
	}

	public void setTreatmentfr(String treatmentfr) {
		this.treatmentfr = treatmentfr;
	}

	@Field
	@Column(name = "treatmentar", nullable = false, length = 65535)
	public String getTreatmentar() {
		return this.treatmentar;
	}

	public void setTreatmentar(String treatmentar) {
		this.treatmentar = treatmentar;
	}

	@Column(name = "formale", nullable = false)
	public boolean isFormale() {
		return this.formale;
	}

	public void setFormale(boolean formale) {
		this.formale = formale;
	}

	@Column(name = "forfemale", nullable = false)
	public boolean isForfemale() {
		return this.forfemale;
	}

	public void setForfemale(boolean forfemale) {
		this.forfemale = forfemale;
	}

	@Column(name = "forchildren", nullable = false)
	public boolean isForchildren() {
		return this.forchildren;
	}

	public void setForchildren(boolean forchildren) {
		this.forchildren = forchildren;
	}

	@Column(name = "coefficient")
	public Short getCoefficient() {
		return this.coefficient;
	}

	public void setCoefficient(Short coefficient) {
		this.coefficient = coefficient;
	}

	@DateBridge(resolution = Resolution.YEAR)
	@Temporal(TemporalType.DATE)
	@Column(name = "creationdate")
	public Date getCreationdate() {
		return creationdate;
	}

	public void setCreationdate(Date creationdate) {
		this.creationdate = creationdate;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "ingredient_prescription", catalog = "honeybee", joinColumns = { @JoinColumn(name = "prescription_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "ingredient_id", nullable = false, updatable = false) })
	public Set<Ingredient> getIngredients() {
		return this.ingredients;
	}

	public void setIngredients(Set<Ingredient> ingredients) {
		this.ingredients = ingredients;
	}

	@IndexedEmbedded
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "prescription")
	public Set<Witness> getWitnesses() {
		return this.witnesses;
	}

	public void setWitnesses(Set<Witness> witnesses) {
		this.witnesses = witnesses;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "defect_prescription", catalog = "honeybee", joinColumns = { @JoinColumn(name = "prescription_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "defect_id", nullable = false, updatable = false) })
	public Set<Defect> getDefects() {
		return this.defects;
	}

	public void setDefects(Set<Defect> defects) {
		this.defects = defects;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "virtue_prescription", catalog = "honeybee", joinColumns = { @JoinColumn(name = "prescription_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "virtue_id", nullable = false, updatable = false) })
	public Set<Virtue> getVirtues() {
		return this.virtues;
	}

	public void setVirtues(Set<Virtue> virtues) {
		this.virtues = virtues;
	}

	@IndexedEmbedded
	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "complement_prescription", catalog = "honeybee", joinColumns = { @JoinColumn(name = "prescription_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "complement_id", nullable = false, updatable = false) })
	public Set<Complement> getComplements() {
		return this.complements;
	}

	public void setComplements(Set<Complement> complements) {
		this.complements = complements;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#toString()
	 */
	@Override
	public String toString() {
		return title +" " +titlear;
	}

}
