package org.otika.honeybee.model;

// Generated May 19, 2013 4:05:52 PM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.Version;
import javax.xml.bind.annotation.XmlRootElement;

import org.hibernate.search.annotations.Field;
import org.hibernate.search.annotations.Indexed;
import org.hibernate.search.annotations.IndexedEmbedded;
import org.hibernate.validator.constraints.NotEmpty;

/**
 * Ingredient generated by hbm2java
 */
@Entity
@Table(name = "ingredient", catalog = "honeybee")
@XmlRootElement
@NamedQueries({
		@NamedQuery(name = "Ingredient.findByForm", query = "select i from Ingredient i where i.form = :form"),
		@NamedQuery(name = "Ingredient.findByLabel", query = "select i from Ingredient i where i.label = :label"),
		@NamedQuery(name = "Ingredient.findAll", query = "select i from Ingredient i"),
		@NamedQuery(name = "Ingredient.findByLabelAndForm", query = "select i from Ingredient i where i.label = :label and i.form = :form") })
@Indexed
public class Ingredient implements java.io.Serializable {

	private static final long serialVersionUID = -3523929976141378902L;
	private Long id;
	private Integer version;
	private Plant plant;
	private Honey honey;
	private Substance substance;
	private String label;
	private String labelfr;
	private String labelar;
	private String labellat;
	private String labelmar;
	private String image;
	private String description;
	private String descriptionfr;
	private String descriptionar;
	private Integer coefficient;
	private String unit;
	private Float quantity;
	private Integer price;
	private String form;
	private boolean complement;
	private Set<Virtue> virtues = new HashSet<Virtue>(0);
	private Set<Prescription> prescriptions = new HashSet<Prescription>(0);
	private Set<Defect> defects = new HashSet<Defect>(0);

	public Ingredient() {
	}

	public Ingredient(String label, String labelfr, String labelar) {
		this.label = label;
		this.labelfr = labelfr;
		this.labelar = labelar;
	}

	public Ingredient(Plant plant, Honey honey, Substance substance,
			String label, String labelfr, String labelar, String labellat,
			String labelmar, String image, String description,
			String descriptionfr, String descriptionar, Integer coefficient,
			String unit, Float quantity, String form, Integer price,
			boolean complement, Set<Virtue> virtues,
			Set<Prescription> prescriptions, Set<Defect> defects) {
		this.plant = plant;
		this.honey = honey;
		this.substance = substance;
		this.label = label;
		this.labelfr = labelfr;
		this.labelar = labelar;
		this.labellat = labellat;
		this.labelmar = labelmar;
		this.image = image;
		this.description = description;
		this.descriptionfr = descriptionfr;
		this.descriptionar = descriptionar;
		this.coefficient = coefficient;
		this.unit = unit;
		this.quantity = quantity;
		this.form = form;
		this.price = price;
		this.complement = complement;
		this.virtues = virtues;
		this.prescriptions = prescriptions;
		this.defects = defects;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Version
	@Column(name = "version")
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@IndexedEmbedded
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "plant_id")
	public Plant getPlant() {
		return this.plant;
	}

	public void setPlant(Plant plant) {
		this.plant = plant;
	}

	@IndexedEmbedded
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "honey_id")
	public Honey getHoney() {
		return this.honey;
	}

	public void setHoney(Honey honey) {
		this.honey = honey;
	}

	@IndexedEmbedded
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "substance_id")
	public Substance getSubstance() {
		return this.substance;
	}

	public void setSubstance(Substance substance) {
		this.substance = substance;
	}

	@Field
	@Column(name = "label", nullable = false, length = 45)
	public String getLabel() {
		return this.label;
	}

	public void setLabel(String label) {
		this.label = label;
	}

	@Field
	@Column(name = "labelfr", nullable = false, length = 45)
	public String getLabelfr() {
		return this.labelfr;
	}

	public void setLabelfr(String labelfr) {
		this.labelfr = labelfr;
	}

	@Field
	@Column(name = "labelar", nullable = false, length = 45)
	public String getLabelar() {
		return this.labelar;
	}

	public void setLabelar(String labelar) {
		this.labelar = labelar;
	}

	@Field
	@Column(name = "labellat", length = 45)
	public String getLabellat() {
		return this.labellat;
	}

	public void setLabellat(String labellat) {
		this.labellat = labellat;
	}

	@Field
	@Column(name = "labelmar", length = 45)
	public String getLabelmar() {
		return this.labelmar;
	}

	public void setLabelmar(String labelmar) {
		this.labelmar = labelmar;
	}

	@Column(name = "image", length = 100)
	public String getImage() {
		return this.image;
	}

	public void setImage(String image) {
		this.image = image;
	}

	@Field
	@Column(name = "description", length = 65535)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Field
	@Column(name = "descriptionfr", length = 65535)
	public String getDescriptionfr() {
		return this.descriptionfr;
	}

	public void setDescriptionfr(String descriptionfr) {
		this.descriptionfr = descriptionfr;
	}

	@Field
	@Column(name = "descriptionar", length = 65535)
	public String getDescriptionar() {
		return this.descriptionar;
	}

	public void setDescriptionar(String descriptionar) {
		this.descriptionar = descriptionar;
	}

	@Column(name = "coefficient")
	public Integer getCoefficient() {
		return this.coefficient;
	}

	public void setCoefficient(Integer coefficient) {
		this.coefficient = coefficient;
	}

	@Column(name = "unit", length = 45)
	public String getUnit() {
		return this.unit;
	}

	public void setUnit(String unit) {
		this.unit = unit;
	}

	@Column(name = "quantity", precision = 12, scale = 0)
	public Float getQuantity() {
		return this.quantity;
	}

	public void setQuantity(Float quantity) {
		this.quantity = quantity;
	}

	@Column(name = "price")
	public Integer getPrice() {
		return price;
	}

	public void setPrice(Integer price) {
		this.price = price;
	}

	@Field
	@NotEmpty
	@Column(name = "form", nullable = false)
	public String getForm() {
		return form;
	}

	public void setForm(String form) {
		this.form = form;
	}
	
	@Column(name = "complement")
	public boolean getComplement() {
		return this.complement;
	}

	public void setComplement(boolean complement) {
		this.complement = complement;
	}
	
	@IndexedEmbedded
	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "virtue_ingredient", catalog = "honeybee", joinColumns = { @JoinColumn(name = "ingredient_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "virtue_id", nullable = false, updatable = false) })
	public Set<Virtue> getVirtues() {
		return this.virtues;
	}

	public void setVirtues(Set<Virtue> virtues) {
		this.virtues = virtues;
	}

	@IndexedEmbedded
	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "ingredient_prescription", catalog = "honeybee", joinColumns = { @JoinColumn(name = "ingredient_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "prescription_id", nullable = false, updatable = false) })
	public Set<Prescription> getPrescriptions() {
		return this.prescriptions;
	}

	public void setPrescriptions(Set<Prescription> prescriptions) {
		this.prescriptions = prescriptions;
	}

	@IndexedEmbedded
	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "defect_ingredient", catalog = "honeybee", joinColumns = { @JoinColumn(name = "ingredient_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "defect_id", nullable = false, updatable = false) })
	public Set<Defect> getDefects() {
		return this.defects;
	}

	public void setDefects(Set<Defect> defects) {
		this.defects = defects;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see java.lang.Object#toString()
	 */
	@Override
	public String toString() {
		return label + " | " + labelar + " | " + labelfr;
	}

}
