package org.otika.honeybee.model;

// Generated Sep 30, 2013 11:33:39 AM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;
import javax.xml.bind.annotation.XmlRootElement;

/**
 * Content generated by hbm2java
 */
@Entity
@Table(name = "content", catalog = "honeybee")
@XmlRootElement
@NamedQueries(value = {
		@NamedQuery(name = "Content.findByCtype", query = "SELECT c FROM Content c WHERE c.ctype = :ctype order by c.datecreated"),
		@NamedQuery(name = "Content.findByCtypeENGLISH", query = "SELECT c FROM Content c WHERE c.ctype = :ctype AND c.contentar = :contentar AND c.contentfr = :contentfr"),
		@NamedQuery(name = "Content.findByCtypeFRENCH", query = "SELECT c FROM Content c WHERE c.ctype = :ctype AND c.contentar = :contentar AND c.content = :content"),
		@NamedQuery(name = "Content.findByCtypeARABIC", query = "SELECT c FROM Content c WHERE c.ctype = :ctype AND c.content = :content AND c.contentfr = :contentfr"),
		@NamedQuery(name = "Content.findByCtypeAndContents", query = "SELECT c FROM Content c WHERE c.ctype = :ctype AND c.content = :content AND c.contentar = :contentar AND c.contentfr = :contentfr"),
		@NamedQuery(name = "Content.findById", query = "select c from Content c where c.id = :id"),
		@NamedQuery(name = "Content.findByTitle", query = "select c from Content c where c.title = :title") })
public class Content implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 7841216926681267213L;
	private Long id;
	private Integer version;
	private Enduser enduser;
	private String title;
	private String titlefr;
	private String titlear;
	private String content;
	private String contentfr;
	private String contentar;
	private Date datecreated;
	private String ctype;
	private Set<Comment> comments = new HashSet<Comment>(0);

	public Content() {
	}

	public Content(Enduser enduser) {
		this.enduser = enduser;
	}

	public Content(Enduser enduser, String title, String titlefr,
			String titlear, String content, String contentfr, String contentar,
			Date datecreated, String ctype, Set<Comment> comments) {
		this.enduser = enduser;
		this.title = title;
		this.titlefr = titlefr;
		this.titlear = titlear;
		this.content = content;
		this.contentfr = contentfr;
		this.contentar = contentar;
		this.datecreated = datecreated;
		this.ctype = ctype;
		this.comments = comments;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Version
	@Column(name = "version")
	public Integer getVersion() {
		return this.version;
	}

	public void setVersion(Integer version) {
		this.version = version;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "enduser_id", nullable = false)
	public Enduser getEnduser() {
		return this.enduser;
	}

	public void setEnduser(Enduser enduser) {
		this.enduser = enduser;
	}

	@Column(name = "title", length = 65)
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Column(name = "titlefr", length = 65)
	public String getTitlefr() {
		return this.titlefr;
	}

	public void setTitlefr(String titlefr) {
		this.titlefr = titlefr;
	}

	@Column(name = "titlear", length = 45)
	public String getTitlear() {
		return this.titlear;
	}

	public void setTitlear(String titlear) {
		this.titlear = titlear;
	}

	@Column(name = "content", length = 65535)
	public String getContent() {
		return this.content;
	}

	public void setContent(String content) {
		this.content = content;
	}

	@Column(name = "contentfr", length = 65535)
	public String getContentfr() {
		return this.contentfr;
	}

	public void setContentfr(String contentfr) {
		this.contentfr = contentfr;
	}

	@Column(name = "contentar", length = 65535)
	public String getContentar() {
		return this.contentar;
	}

	public void setContentar(String contentar) {
		this.contentar = contentar;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "datecreated", length = 19)
	public Date getDatecreated() {
		return this.datecreated;
	}

	public void setDatecreated(Date datecreated) {
		this.datecreated = datecreated;
	}

	/**
	 * @return the ctype
	 */
	@Column(name = "ctype", length = 45)
	public String getCtype() {
		return ctype;
	}

	/**
	 * @param ctype the ctype to set
	 */
	public void setCtype(String ctype) {
		this.ctype = ctype;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "content")
	public Set<Comment> getComments() {
		return this.comments;
	}

	public void setComments(Set<Comment> comments) {
		this.comments = comments;
	}
}
